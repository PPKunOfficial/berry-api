name: Docker Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write  # 允许创建 Release
  packages: write  # 允许推送到 GitHub Packages (可选)

jobs:
  build-and-docker:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Rust 工具链
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: 设置 Rust 缓存
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "."
          cache-on-failure: true

      - name: 编译 Rust 二进制文件
        run: |
          # 编译 berry-api 二进制文件
          cargo build --bin berry-api --release --target x86_64-unknown-linux-gnu

          # 验证二进制文件存在
          ls -la target/x86_64-unknown-linux-gnu/release/

          # 创建临时目录存放二进制文件
          mkdir -p ./docker-binaries
          cp target/x86_64-unknown-linux-gnu/release/berry-api ./docker-binaries/

          # 验证二进制文件可执行
          file ./docker-binaries/berry-api

      - name: 准备 Release 文件
        run: |
          # 创建 release 目录
          mkdir -p ./release-assets

          # 复制二进制文件并重命名
          cp target/x86_64-unknown-linux-gnu/release/berry-api ./release-assets/berry-api-linux-x86_64

          # 创建压缩包
          cd release-assets
          tar -czf berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz berry-api-linux-x86_64

          # 计算校验和
          sha256sum berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz > berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz.sha256

          # 显示文件信息
          ls -la
          cat berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz.sha256

      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 登录到 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.prebuilt
          push: true
          platforms: linux/amd64
          tags: |
            ppkun00/berry-api:${{ github.ref_name }}
            ppkun00/berry-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 创建 GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-assets/berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz
            release-assets/berry-api-${{ github.ref_name }}-linux-x86_64.tar.gz.sha256
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
