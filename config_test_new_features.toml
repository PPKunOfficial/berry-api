# 测试新功能的配置文件
# 包含所有第二阶段实现的功能

[settings]
health_check_interval_seconds = 30
request_timeout_seconds = 30
max_retries = 3
circuit_breaker_failure_threshold = 5
circuit_breaker_timeout_seconds = 60
recovery_check_interval_seconds = 120
max_internal_retries = 2
health_check_timeout_seconds = 10

[settings.smart_ai]
enabled = true
confidence_threshold = 0.3
health_check_interval_seconds = 60
connectivity_check_timeout_seconds = 5

# Provider配置 - 测试自定义HTTP头功能
[providers.openai_test]
name = "OpenAI Test Provider"
base_url = "https://httpbin.org"  # 使用httpbin测试
api_key = "test-openai-key"
models = ["gpt-4", "gpt-3.5-turbo"]
enabled = true
timeout_seconds = 30
max_retries = 3
backend_type = "openai"
# 测试自定义HTTP头
headers = { "X-Custom-Client" = "berry-api", "X-Version" = "1.0", "X-Environment" = "test" }

[providers.azure_test]
name = "Azure Test Provider"
base_url = "https://httpbin.org"
api_key = "test-azure-key"
models = ["gpt-4", "gpt-35-turbo"]
enabled = true
timeout_seconds = 30
max_retries = 3
backend_type = "openai"
# 不同的自定义头
headers = { "X-Azure-Client" = "berry-api", "X-Deployment" = "test" }

[providers.claude_test]
name = "Claude Test Provider"
base_url = "https://httpbin.org"
api_key = "test-claude-key"
models = ["claude-3-opus", "claude-3-sonnet"]
enabled = true
timeout_seconds = 30
max_retries = 3
backend_type = "claude"

# 模型配置 - 测试后端标签和优先级
[models.gpt-4]
name = "GPT-4"
enabled = true
strategy = "weighted_failover"

# 测试后端标签和优先级功能
[[models.gpt-4.backends]]
provider = "openai_test"
model = "gpt-4"
weight = 0.6
priority = 1  # 最高优先级
enabled = true
tags = ["premium", "fast"]  # 高级和快速标签
billing_mode = "per_token"

[[models.gpt-4.backends]]
provider = "azure_test"
model = "gpt-4"
weight = 0.4
priority = 2  # 次优先级
enabled = true
tags = ["premium", "stable"]  # 高级和稳定标签
billing_mode = "per_token"

[models.gpt-3.5-turbo]
name = "GPT-3.5 Turbo"
enabled = true
strategy = "smart_weighted_failover"

[[models.gpt-3.5-turbo.backends]]
provider = "openai_test"
model = "gpt-3.5-turbo"
weight = 0.7
priority = 1
enabled = true
tags = ["basic", "fast"]  # 基础和快速标签
billing_mode = "per_request"

[[models.gpt-3.5-turbo.backends]]
provider = "azure_test"
model = "gpt-35-turbo"
weight = 0.3
priority = 2
enabled = true
tags = ["basic", "stable"]  # 基础和稳定标签
billing_mode = "per_request"

[models.claude-3-opus]
name = "Claude 3 Opus"
enabled = true
strategy = "failover"

[[models.claude-3-opus.backends]]
provider = "claude_test"
model = "claude-3-opus"
weight = 1.0
priority = 1
enabled = true
tags = ["premium", "creative"]  # 高级和创意标签
billing_mode = "per_token"

# 用户配置 - 测试标签和速率限制功能
[users.admin_user]
name = "Admin User"
token = "admin-token-123"
enabled = true
allowed_models = []  # 空数组表示可以访问所有模型
tags = ["premium", "admin"]  # 管理员标签
# 管理员用户高速率限制
rate_limit = { requests_per_minute = 1000, requests_per_hour = 10000, requests_per_day = 100000 }

[users.premium_user]
name = "Premium User"
token = "premium-token-456"
enabled = true
allowed_models = ["gpt-4", "claude-3-opus"]
tags = ["premium"]  # 只有高级标签
# 高级用户中等速率限制
rate_limit = { requests_per_minute = 100, requests_per_hour = 1000, requests_per_day = 10000 }

[users.basic_user]
name = "Basic User"
token = "basic-token-789"
enabled = true
allowed_models = ["gpt-3.5-turbo"]
tags = ["basic"]  # 只有基础标签
# 基础用户低速率限制
rate_limit = { requests_per_minute = 10, requests_per_hour = 100, requests_per_day = 1000 }

[users.creative_user]
name = "Creative User"
token = "creative-token-abc"
enabled = true
allowed_models = ["claude-3-opus"]
tags = ["creative", "premium"]  # 创意和高级标签
# 创意用户特殊速率限制
rate_limit = { requests_per_minute = 50, requests_per_hour = 500, requests_per_day = 5000 }

[users.limited_user]
name = "Limited User"
token = "limited-token-def"
enabled = true
allowed_models = ["gpt-3.5-turbo"]
tags = []  # 无标签用户
# 受限用户极低速率限制
rate_limit = { requests_per_minute = 2, requests_per_hour = 20, requests_per_day = 200 }

[users.disabled_user]
name = "Disabled User"
token = "disabled-token-xyz"
enabled = false  # 禁用用户
allowed_models = []
tags = []
rate_limit = { requests_per_minute = 1, requests_per_hour = 10, requests_per_day = 100 }
